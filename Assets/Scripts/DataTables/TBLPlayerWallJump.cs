using System;
using System.Collections.Generic;
using UnityEngine;
using BansheeGz.BGDatabase;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

[AddComponentMenu("BansheeGz/Generated/TBLPlayerWallJump")]
public partial class TBLPlayerWallJump : BGEntityGo
{
	public override BGMetaEntity MetaConstraint
	{
		get
		{
			return MetaDefault;
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5211216713620876070,9962974495673789350));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	public new System.String name
	{
		get
		{
			return _name[Entity.Index];
		}
		set
		{
			_name[Entity.Index] = value;
		}
	}
	public UnityEngine.Vector2 wallJumpClimb
	{
		get
		{
			return _wallJumpClimb[Entity.Index];
		}
		set
		{
			_wallJumpClimb[Entity.Index] = value;
		}
	}
	public UnityEngine.Vector2 wallJumpOff
	{
		get
		{
			return _wallJumpOff[Entity.Index];
		}
		set
		{
			_wallJumpOff[Entity.Index] = value;
		}
	}
	public UnityEngine.Vector2 wallLeap
	{
		get
		{
			return _wallLeap[Entity.Index];
		}
		set
		{
			_wallLeap[Entity.Index] = value;
		}
	}
	public System.Single wallSlideSpeedMax
	{
		get
		{
			return _wallSlideSpeedMax[Entity.Index];
		}
		set
		{
			_wallSlideSpeedMax[Entity.Index] = value;
		}
	}
	public System.Single wallStickTime
	{
		get
		{
			return _wallStickTime[Entity.Index];
		}
		set
		{
			_wallStickTime[Entity.Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName __name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(__name==null || __name.IsDeleted) __name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5164499274682893368,18138985046626025365));
			return __name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldVector2 __wallJumpClimb;
	public static BansheeGz.BGDatabase.BGFieldVector2 _wallJumpClimb
	{
		get
		{
			if(__wallJumpClimb==null || __wallJumpClimb.IsDeleted) __wallJumpClimb=(BansheeGz.BGDatabase.BGFieldVector2) MetaDefault.GetField(new BGId(5685988274970450032,7033951262010341015));
			return __wallJumpClimb;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldVector2 __wallJumpOff;
	public static BansheeGz.BGDatabase.BGFieldVector2 _wallJumpOff
	{
		get
		{
			if(__wallJumpOff==null || __wallJumpOff.IsDeleted) __wallJumpOff=(BansheeGz.BGDatabase.BGFieldVector2) MetaDefault.GetField(new BGId(4811488264060308394,3266061739616885925));
			return __wallJumpOff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldVector2 __wallLeap;
	public static BansheeGz.BGDatabase.BGFieldVector2 _wallLeap
	{
		get
		{
			if(__wallLeap==null || __wallLeap.IsDeleted) __wallLeap=(BansheeGz.BGDatabase.BGFieldVector2) MetaDefault.GetField(new BGId(4823594891909061617,3620839044255706806));
			return __wallLeap;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat __wallSlideSpeedMax;
	public static BansheeGz.BGDatabase.BGFieldFloat _wallSlideSpeedMax
	{
		get
		{
			if(__wallSlideSpeedMax==null || __wallSlideSpeedMax.IsDeleted) __wallSlideSpeedMax=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5359039846477130348,8563038247968832687));
			return __wallSlideSpeedMax;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat __wallStickTime;
	public static BansheeGz.BGDatabase.BGFieldFloat _wallStickTime
	{
		get
		{
			if(__wallStickTime==null || __wallStickTime.IsDeleted) __wallStickTime=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4761390978439114006,13335770185199036082));
			return __wallStickTime;
		}
	}
}
